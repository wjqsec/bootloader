#
#  Beispielkonfigurationsdatei für Easyboot
#
#  TIPP: Durch Ausführen von `easyboot -vv` (mit mindestens 2 `v`) wird die
#  Eingabe validiert, einschließlich einer Syntaxprüfung der Boot-Konfigurationsdatei.
#

# ------------------------------------------------------------------------------
# Standardmäßig sind die Boot-Meldungen unterdrückt, „Quiet“-Modus. Sie können
# die Ausführlichkeitsstufe erhöhen, um immer mehr Details anzuzeigen.

verbose 1
#verbose 3

# ------------------------------------------------------------------------------
# Der Framebuffer ist immer eingerichtet, standardmäßig auf 800 x 600 x 32 bpp.
# Sie können dies mit der folgenden Zeile ändern. Sie können auch die Vordergrund-
# und Hintergrundfarben sowie die Farbe des Fortschrittsbalkens festlegen.

framebuffer 1024 768 16
#framebuffer 1920 1080 32 #202020 #f0f0f0 #d0d0d0

# ------------------------------------------------------------------------------
# Die Option `default` gibt an, welcher `menuentry` nach einer Zeitüberschreitung
# gestartet werden soll, wenn keine Benutzerinteraktion erfolgt. Die erste Zahl
# ist der Index, 1 bis 9, und das zweite Argument ist in Millisekunden angegeben.

# Wählen Sie nach 5 Sekunden automatisch die erste Option
default 1 5000

# ------------------------------------------------------------------------------
# Standardmäßig sind die Startoptionen im Menü horizontal angeordnet. Sie können
# dies in vertikal ändern.

#menualign vertical

# ------------------------------------------------------------------------------
# Diese Zeile startet eine neue Boot-Option. Es dauert bis zur nächsten
# `menuentry`-Zeile. Das erste Argument ist das Symbol, das zweite ist eine
# optionale Versions- oder Freigabeinformation, letzteres nur ASCII. Für jedes
# Symbol muss eine easyboot/(Symbol).tga-Datei vorhanden sein, 64 Pixel hoch und
# 64 Pixel breit im RLE-komprimierten indizierten (farbzugeordneten) TGA-Format.

menuentry linux current

# ------------------------------------------------------------------------------
# Wenn sich der Kernel und die Module nicht auf der Boot-Partition, sondern auf
# einer anderen befinden, können Sie hier diese Root-Partition angeben.

partition 01020304-0506-0708-0a0b0c0d0e0f1011

# Wenn Sie Dateien von einer anderen Stelle als der Boot-Partition laden,
# benötigen Sie Dateisystem-Plugins.

# ------------------------------------------------------------------------------
# Mit dem `kernel` können Sie festlegen, welche Datei geladen werden soll und
# welche Argumente übergeben werden sollen. Der Pfad muss ein absoluter Pfad sein
# (kein `.` oder `..`), und sein Stammverzeichnis muss relativ zur ausgewählten
# Root-Partition (oder Boot-Partition) sein. Wenn Verzeichnisse verwendet werden,
# ist das Trennzeichen `/` (auch bei UEFI). Ein Leerzeichen trennt den Pfad von
# der Befehlszeile. Wenn Sie also ein Leerzeichen im Pfad benötigen, müssen Sie
# es mit einem Backslash wie `mein\ kernel` maskieren. Bei der Namensübereinstimmung
# wird weder Groß- noch Kleinschreibung berücksichtigt.

kernel vmlinuz-linux console=ttyS0,115200 console=tty0
#kernel mykernel
#kernel core.exe
#kernel boot/bzImage quiet
#kernel EFI/boot/3rd\ Party.elf
# Die Root-Partition kann auch in der Boot-Befehlszeile angegeben werden
#kernel vmlinuz-linux root=PARTUUID=01020304-0506-0708-0a0b0c0d0e0f1011

# Wenn Ihr Kernel nicht ELF oder PE ist oder nicht das Multiboot2-Protokoll
# verwendet, benötigen Sie Kernel-Loader-Plugins, um ihn zu starten.


# ------------------------------------------------------------------------------
# Mit der `module`-Direktive können Sie weitere Dateien laden. Dieselbe Syntax
# wie bei `kernel`, das erste Argument ist ein Pfad, der Rest sind optionale
# Parameter für Sie.

module initrd
#module boot/rootfs.tgz arch=beliebig einige andere Argumente

# Wenn Sie ein nicht-gzip-komprimiertes Modul haben und es transparent
# dekomprimieren möchten, benötigen Sie Dekomprimierungs-Plugins.


# ------------------------------------------------------------------------------
# Natürlich können Sie ein Boot-Splash-Logo anzeigen. Es muss im RLE-komprimierten,
# indizierten (farblich zugeordneten) TGA-Format vorliegen. Wenn das erste Argument
# nicht mit einem `#`-Hashmark beginnt, gibt es nur ein Argument, nämlich die
# Logodatei. Wenn das erste Argument mit einem `#` beginnt, folgt eine
# HTML-Farbnotation, die die Hintergrundfarbe festlegt. In diesem Fall ist das
# zweite Argument der Pfad.

bootsplash #1177FF logo.tga
#bootsplash logo.tga
#bootsplash #00FF00 boot/images/meine\ splash\ logo.tga

# Das Boot-Splash-Logo wird angezeigt, wenn dieser `menuentry` zum Booten ausgewählt
# wird.

# ------------------------------------------------------------------------------
# Sie können den Kernel auf allen Prozessorkernen gleichzeitig starten, aber
# dazu muss das smp-Plugin installiert sein.

#multicore

# ------------------------------------------------------------------------------
# Weitere `menuentry`-Spezifikationen könnten folgen. In ihnen ist nur die Zeile
# `kernel` obligatorisch, und Sie können auch Blöcke verwenden (nur Eyecandy).

menuentry linux backup {
    kernel vmlinuz-backup console=ttyS0,115200 console=tty0
}
