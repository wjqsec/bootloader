#include <Platform.h> // Only use angled for Platform, else, xcode project won't compile
#include "../cpp_foundation/XString.h"
#include "../cpp_foundation/unicode_conversions.h"
#include "global_test.h"



/*
 * This array is designed for mapping upper and lower case letter
 * together for a case independent comparison.  The mappings are
 * based upon ascii character sequences.
 */
 static const char charmap_octal[] = {
         '\000', '\001', '\002', '\003', '\004', '\005', '\006', '\007',
         '\010', '\011', '\012', '\013', '\014', '\015', '\016', '\017',
         '\020', '\021', '\022', '\023', '\024', '\025', '\026', '\027',
         '\030', '\031', '\032', '\033', '\034', '\035', '\036', '\037',
         '\040', '\041', '\042', '\043', '\044', '\045', '\046', '\047',
         '\050', '\051', '\052', '\053', '\054', '\055', '\056', '\057',
         '\060', '\061', '\062', '\063', '\064', '\065', '\066', '\067',
         '\070', '\071', '\072', '\073', '\074', '\075', '\076', '\077',
         '\100', '\141', '\142', '\143', '\144', '\145', '\146', '\147',
         '\150', '\151', '\152', '\153', '\154', '\155', '\156', '\157',
         '\160', '\161', '\162', '\163', '\164', '\165', '\166', '\167',
         '\170', '\171', '\172', '\133', '\134', '\135', '\136', '\137',
         '\140', '\141', '\142', '\143', '\144', '\145', '\146', '\147',
         '\150', '\151', '\152', '\153', '\154', '\155', '\156', '\157',
         '\160', '\161', '\162', '\163', '\164', '\165', '\166', '\167',
         '\170', '\171', '\172', '\173', '\174', '\175', '\176', '\177',
         '\200', '\201', '\202', '\203', '\204', '\205', '\206', '\207',
         '\210', '\211', '\212', '\213', '\214', '\215', '\216', '\217',
         '\220', '\221', '\222', '\223', '\224', '\225', '\226', '\227',
         '\230', '\231', '\232', '\233', '\234', '\235', '\236', '\237',
         '\240', '\241', '\242', '\243', '\244', '\245', '\246', '\247',
         '\250', '\251', '\252', '\253', '\254', '\255', '\256', '\257',
         '\260', '\261', '\262', '\263', '\264', '\265', '\266', '\267',
         '\270', '\271', '\272', '\273', '\274', '\275', '\276', '\277',
         '\300', '\341', '\342', '\343', '\344', '\345', '\346', '\347',
         '\350', '\351', '\352', '\353', '\354', '\355', '\356', '\357',
         '\360', '\361', '\362', '\363', '\364', '\365', '\366', '\367',
         '\370', '\371', '\372', '\333', '\334', '\335', '\336', '\337',
         '\340', '\341', '\342', '\343', '\344', '\345', '\346', '\347',
         '\350', '\351', '\352', '\353', '\354', '\355', '\356', '\357',
         '\360', '\361', '\362', '\363', '\364', '\365', '\366', '\367',
         '\370', '\371', '\372', '\373', '\374', '\375', '\376', '\377',
};


static const unsigned char charmap[] = {
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
        0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
        0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
        0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
        0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
        0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
        0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
        0x40, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
        0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
        0x78, 0x79, 0x7a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
        0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
        0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
        0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
        0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,
        0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
        0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
        0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
        0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
        0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
        0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
        0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7,
        0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
        0xc0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7,
        0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
        0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,
        0xf8, 0xf9, 0xfa, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
        0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7,
        0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
        0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,
        0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
};


int strcasecmp_tests()
{

//	int ret;
 
  for ( int i = 0 ; i <= 255 ; ++i) {
    if ( (unsigned char)(charmap_octal[i]) != charmap[i] ) return i;
  }

	return 0;
}
